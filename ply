#!/bin/python3

import os, re, json

validExt = ['.mkv','.mp4','.avi']

#TODO: Add flags for non-updating runs, decrementing the episode counter, manually setting the episode counter, setting to indexing mode
#TODO: Add functionality to increment into .5 episodes
#TODO: Add functionality to convert episodes into the standard format (Probably via the indexing method)
#TODO: (Bug) Program does not currently detect the lowest episode in a folder and automatically sets it to episode 1 (With standard format) | Create a funcition to detect the lowest numbered episode

def getExt( filename ):
    basestring = str( filename )
    extension = ''
    for chara in range(len(basestring)-1, 0, -1):
        if (basestring[chara] == '.'):
            extension = basestring[chara:]
            return extension
    return extension

def isValidFile( filename ):
    for ext in validExt:
        if (getExt(filename) == ext):
            return True
    return False

def createCompl(): #creates the complete.json file to keep track of episodes
    try:
        compX = open("complete.json", 'x')
        compW = open("complete.json", "w")
        if os.path.isfile("complete"): #converts old complete file to json format
            oldCompl = open("complete", 'r')
            baseCompl['Episode'] = int(oldCompl.read())
            oldCompl.close()
            os.remove("complete")
        compW.write(json.dumps(baseCompl, indent = 4))
        compW.close()
        return True
    except:
        return False

def updateComplJson( complJson ):
    compW = open("complete.json", "w")
    compW.write(json.dumps(complJson, indent = 4))
    compW.close()

def getComplJson():
    try:
        compR = open("complete.json","r")
        compFile = compR.read()
        return json.loads(compFile)
    except:
        createCompl()
        return 0

def isStandard( filename ): #Checks to see if a filename matches the standard layout
    if re.search("\[.*\].* - \d{1,3}.*\..*", filename) == None:
        return False
    else:
        return True

def getSeriesTitle(filename): #gets the title of a series for standard formatted shows
    strArray = re.split("(\W+)", filename)
    #print(strArray)
    title = None
    recFlag = False
    for index in strArray:
        if index == ' - ':
            recFlag = False
            break
        if recFlag == True:
            try: 
                title = title + index
            except TypeError: #Avoid Issues when concatenateing on a NoneType and avoid pre-string whitespace
                title = index
        if index == '] ':
            recFlag = True
    return title

def getEpisodeNumber(filename): #gets the episode number for standard formatted shows
    for i in range(0,len(filename)):
        if filename[i:i+3] == ' - ':
            trimStr = filename[i+3:]
            break
    epNum = trimStr.split(' ')
    return epNum[0]

def getSubberName(filename):
    strArray = filename.split()
    subber = strArray[0]
    return subber[1:len(subber)-1]

def getNextEpisode(complJson):
    epNum = int(complJson['Episode'])
    epNum = epNum + 1
    if epNum < 10:
        epNum = "0"+str(epNum)
    return '['+complJson['Subber']+'] '+complJson['Anime']+' - '+str(epNum)

baseCompl = {
    "Subber":       None,
    "Anime":        None,
    "Episode":      0,
    "UsePosIndex":  False
}


files = [f for f in os.listdir() if os.path.isfile(f)]

validFiles = []
for item in files:
    #print(item + " ext:" + getExt(item))
    if (isValidFile(item)):
        validFiles.append(item)

#for files in validFiles:
#    print(files)
#print(os.getcwd())

#for i in validFiles:
#    print(getSubberName(i))


createCompl()
complJson = getComplJson()
sampleFile = validFiles[0]
if complJson['Anime'] == None and complJson['UsePosIndex'] == False:
    if isStandard(sampleFile):
        complJson['Subber'] = getSubberName(sampleFile)
        complJson['Anime'] = getSeriesTitle(sampleFile)
        complJson['UsePosIndex'] = False
        updateComplJson(complJson)
        complJson = getComplJson()
    else:
        complJson['UsePosIndex'] = True
        updateComplJson(complJson)

if complJson['UsePosIndex'] == True:
    if complJson['Episode'] >= len(validFiles):
        print("There are no more valid file to be played.")
    else:
        print("Now Playing " + validFiles[complJson["Episode"]] + " ...")
        os.system("mpv "+' --really-quiet "'+validFiles[complJson['Episode']]+'"')
        complJson['Episode'] = complJson['Episode'] + 1
        updateComplJson(complJson)
else:
    lastEpisode = 0
    for i in validFiles:
        if float(getEpisodeNumber(i)) > lastEpisode:
            lastEpisode = float(getEpisodeNumber(i))
    if int(complJson['Episode'])+1 > lastEpisode:
        print("There are no more valid files to be played.")
    else:
        print("Now Playing "+getNextEpisode(complJson))
        os.system("mpv "+' --really-quiet '+"'"+getNextEpisode(complJson)+"'*")
        complJson['Episode'] = complJson['Episode'] + 1
        updateComplJson(complJson)

